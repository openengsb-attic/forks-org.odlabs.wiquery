User guide for WickeXt ${version}

* About WickeXt

  WickeXt's aim is to provide non intrusive, accessible and rich components for 
  web applications from the Java language. It integrates the 
  JavaScript frameworks jQuery and jQuery UI with Wicket, 
  a Java framework providing a real way to create web applications 
  with an OO approach.
  
* A "Hello world" application from scratch

  Let's go deeper in WickeXt and create a Hello World displayed in a modal 
  window. This tutorial uses with Maven2 to resolve all jar dependencies and
  eclipse 3.2 europa as IDE (the version used for this tutorial includes
  the WTP plugin).   

** Step 1 - WickeXt Maven installation

  First of all, download install Maven2 to be able to build and manage this
  tutorial configuration.
  
  Then, download WickeXt jar file wickext-${version}.jar and install it in
  your local Maven repository as below:
  
  mvn install:install-file -DgroupId=org.objetdirect.wickext -DartifactId=wickext -Dversion=0.6 -Dpackaging=jar -Dfile=/Users/lionel/Downloads/wickext-0.6.jar
  

** Step 2 - Project configuration
  
  First of all, let's create a directory on your file system.
  
  
  
  And create the POM file pom.xml in this directory as below:
  
  <?xml version="1.0" encoding="UTF-8"?><project>

  <modelVersion>4.0.0</modelVersion>
  <groupId>Sample</groupId>
  <artifactId>Sample</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <description></description>

  <dependencies>
  	<dependency>
  		<groupId>org.objetdirect.wickext</groupId>
  		<artifactId>wickext</artifactId>
  		<version>0.6</version>
  	</dependency>
  </dependencies>

  </project>
  
  Ok, now let's perform some Maven magic with the command below:
  
  mvn eclipse:eclipse
  
  (This will configure your directory as an eclipse project)
  
  The output you should have is:
  
** Step 3 - Configuring your project the webapp for wickext

  Create and edit the web.xml file in <name>/target/<name>-0.0.1-SNAPSHOT/WEB-INF/ 
  to put these lines (it will enable WickeXt on your webapp).
  
  <?xml version="1.0" encoding="UTF-8"?>
  <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
    <display-name>Wickext</display-name>
    <filter>
      <filter-name>HelloWorld</filter-name>
      <filter-class>
	  		org.apache.wicket.protocol.http.WicketFilter
	  </filter-class>
      <init-param>
        <param-name>applicationClassName</param-name>
        <param-value>com.objetdirect.wickext.jquery.examples.WickextDemoApplication</param-value>
      </init-param>
    </filter>
    <filter-mapping>
      <filter-name>Wicket Ext integration</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
  </web-app>  
  
  
  Add WickeXt jar file:
  
  Configure your web.xml for Wicket:
  
  And finally create your HelloWorldApplication:
  
  Ok, now all the magic of WickeXT can be used !
  
** The hello world modal window

  Create your HelloWorldHomePage:
  
  And set it as your application's home page:
  
  

* WickeXt UI: widgets reference guide

** Window

** DatePicker

** Tabs

** Accordion

** Resizable

** Draggable

* WickeXt UI: Application theming

* WickeXt plugins: plugins reference guide

** TreeView

** DataGrid

* Bind your own components